<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:spring="http://www.infinispan.org/schemas/spring" 
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd http://www.infinispan.org/schemas/spring http://www.infinispan.org/schemas/infinispan-spring-5.0.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"
	default-autowire="byName">
	
	<!-- 直接配置，之所以单独拿出来定义，是因为要和Hibernate二级缓存共用 -->
<!-- 	<bean id="nativeEmbeddedCacheManager" class="org.infinispan.manager.DefaultCacheManager"> -->
<!-- 		<constructor-arg value="infinispan-configs.xml" index="0"/> -->
<!-- 	</bean> -->
	<!-- 工厂方法配置 -->
	<bean id="nativeEmbeddedCacheManager" class="org.infinispan.spring.support.embedded.InfinispanEmbeddedCacheManagerFactoryBean">
		<property name="configurationFileLocation" value="classpath:infinispan-configs.xml"/>
	</bean>
	
	<!-- 直接配置 -->
	<bean id="infinispanCacheManager" class="com.vteba.cache.infinispan.InfinispanCacheManagerImpl" destroy-method="destroy">
		<property name="embeddedCacheManager" ref="nativeEmbeddedCacheManager"/>
	</bean>
	<!-- 工厂方法配置 -->
<!-- 	<bean id="infinispanCacheManager" class="com.vteba.cache.infinispan.support.InfinispanCacheManagerFactoryBean"> -->
<!-- 		<property name="embeddedCacheManager" ref="nativeEmbeddedCacheManager"/> -->
<!-- 	</bean> -->
	
	<!-- Spring Abstract Cache 使用的缓存管理器 -->
	<!-- 直接配置 -->
	<bean id="springEmbeddedCacheManager" class="org.infinispan.spring.provider.SpringEmbeddedCacheManager">
		<constructor-arg ref="nativeEmbeddedCacheManager" index="0"/>
	</bean>
	<!-- 名空间配置 -->
<!-- 	<spring:embedded-cache-manager id="springEmbeddedCacheManager" configuration="classpath:infinispan-configs.xml"/> -->
	
	<!-- 配置Infinispan原生Cache的方法 -->
<!-- 	<bean id="securityUserCache" class="org.infinispan.spring.support.embedded.InfinispanNamedEmbeddedCacheFactoryBean"> -->
<!-- 		<property name="cacheName" value="springSecurityUserCache"/> -->
<!-- 		<property name="infinispanEmbeddedCacheManager" ref="nativeEmbeddedCacheManager"/> -->
<!-- 	</bean> -->
	
	<!-- spring security user 缓存 -->
	<bean id="infinispanUserCache" class="com.vteba.cache.infinispan.support.InfinispanCacheFactoryBean">
		<property name="cacheName" value="springSecurityUserCache"/>
		<property name="infinispanCacheManager" ref="infinispanCacheManager"/>
	</bean>
	
	<!--  -->
	<bean id="springSecurityUserCache" class="com.vteba.cache.infinispan.support.InfinispanBasedUserCache">
		<property name="infinispanUserCache" ref="infinispanUserCache"/>
	</bean>
</beans>